kind: Deployment
apiVersion: apps/v1
metadata:
  name: iom
  labels:
    app: iom
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iom
  template:
    metadata:
      labels:
        app: iom
    spec:
      volumes:
${AppsDirYml_____}      - name: application-dev
${AppsDirYml_____}        hostPath:
${AppsDirYml_____}          path: ${CUSTOM_APPS_DIR}
${TemplatesDirYml}      - name: templates-dev
${TemplatesDirYml}        hostPath:
${TemplatesDirYml}          path: ${CUSTOM_TEMPLATES_DIR}
${XsltDirYml_____}      - name: xslt-dev
${XsltDirYml_____}        hostPath:
${XsltDirYml_____}          path: ${CUSTOM_XSLT_DIR}
${ShareDirYml____}      - name: share-dev
${ShareDirYml____}        hostPath:
${ShareDirYml____}          path: ${CUSTOM_SHARE_DIR}
${LogDirYml______}      - name: log-dev
${LogDirYml______}        hostPath:
${LogDirYml______}          path: ${CUSTOM_LOG_DIR}
${DbmigrateDirYml}      - name: dbmigrate-sps
${DbmigrateDirYml}        hostPath:
${DbmigrateDirYml}          path: ${CUSTOM_DBMIGRATE_DIR}/stored_procedures
${DbmigrateDirYml}      - name: dbmigrate-scripts
${DbmigrateDirYml}        hostPath:
${DbmigrateDirYml}          path: ${CUSTOM_DBMIGRATE_DIR}/migrations
      containers:
      - name: iom
        image: ${IOM_APP_IMAGE}
        #
        # For testing purposes, e.g. installing additional packages using yum,
        # it is necessary to run the container as user root. If you need this to do,
        # just uncomment the following statement.
        # 
        # securityContext:
        #   runAsUser: 0
        #
        imagePullPolicy: ${IMAGE_PULL_POLICY}
        readinessProbe:
          httpGet:
            path: /monitoring/services/health/status
            port: ${PORT_IOM}
          failureThreshold: 1
          periodSeconds: 10
          initialDelaySeconds: 150
          timeoutSeconds: 8
          successThreshold: 1
        volumeMounts:
${AppsDirYml_____}        - name: application-dev
${AppsDirYml_____}          mountPath: /opt/oms/application-dev
${TemplatesDirYml}        - name: templates-dev
${TemplatesDirYml}          mountPath: /opt/oms/templates-dev
${XsltDirYml_____}        - name: xslt-dev
${XsltDirYml_____}          mountPath: /opt/oms/xslt-dev
${ShareDirYml____}        - name: share-dev
${ShareDirYml____}          mountPath: /var/opt/share
${LogDirYml______}        - name: log-dev
${LogDirYml______}          mountPath: /var/log/log-share
        env:
          - name: TENANT
            value: Intershop
          - name: ENVIRONMENT
            value: '${ID}'
          - name: OMS_DB_HOSTLIST
            value: postgres-service:${FORWARD_PORT_DB}
          - name: OMS_DB_PASS
            value: '${DB_PASSWORD}'
          - name: OMS_DB_USER
            value: '${DB_USER}'
          - name: OMS_DB_NAME
            value: '${DB_NAME}'
          - name: OMS_SHAREDFS_HEALTHCHECK
            value: disabled
          - name: OMS_LOGLEVEL_CONSOLE
            value: '${OMS_LOGLEVEL_CONSOLE}'
          - name: OMS_LOGLEVEL_IOM
            value: '${OMS_LOGLEVEL_IOM}'
          - name: OMS_LOGLEVEL_HIBERNATE
            value: '${OMS_LOGLEVEL_HIBERNATE}'
          - name: OMS_LOGLEVEL_QUARTZ
            value: '${OMS_LOGLEVEL_QUARTZ}'
          - name: OMS_LOGLEVEL_CUSTOMIZATION
            value: '${OMS_LOGLEVEL_CUSTOMIZATION}'
          - name: OMS_LOGLEVEL_SCRIPTS
            value: '${OMS_LOGLEVEL_SCRIPTS}'
          - name: CAAS_ENV_NAME
            value: '${CAAS_ENV_NAME}'
          - name: JBOSS_OPTS
            value: "--debug *:8787"
          - name: JBOSS_JAVA_OPTS
            value: "-Xms1024M -Xmx2048M"
          - name: OMS_WILDFLY_READY_TIMEOUT
            value: '180'
          - name: OMS_PUBLIC_URL
            value: 'http://${HOST_IOM}:${FORWARD_PORT_IOM}'
          - name: OMS_EXEC_BACKEND_APPS
            value: 'true'
          - name: OMS_SHARE
            value: '${OmsShareDir}'
          - name: OMS_SMTP_HOST
            value: 'mailhog-service'
          - name: OMS_SMTP_PORT
            value: '${FORWARD_PORT_MAILHOG_SMTP}'
${LogDirYml______}          - name: LOG_SHARE
${LogDirYml______}            value: '/var/log/log-share'
        lifecycle:
          postStart:
            exec:
              command: ["/bin/bash", "-c", "/opt/oms/bin/iom_start_handler.sh; apply-templates > /dev/null 2>&1; apply-xslt > /dev/null 2>&1; /opt/jboss/wildfly/bin/add-user.sh -u admin -p admin"]
      initContainers:
        - name: dbaccount
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          image: ${IOM_DBACCOUNT_IMAGE}
          volumeMounts:
${LogDirYml______}          - name: log-dev
${LogDirYml______}            mountPath: /var/log/log-share
          env:
            - name: TENANT
              value: Intershop
            - name: ENVIRONMENT
              value: '${ID}'
            - name: PGHOST
              value: postgres-service
            - name: PGPORT
              value: '${FORWARD_PORT_DB}'
            - name: PGPASSWORD
              value: postgres
            - name: OMS_DB_PASS
              value: '${DB_PASSWORD}'
            - name: OMS_DB_OPTIONS
              value: "ENCODING='UTF8' LC_COLLATE='en_US.utf8' LC_CTYPE='en_US.utf8' CONNECTION LIMIT=-1"
            - name: OMS_LOGLEVEL_SCRIPTS
              value: '${OMS_LOGLEVEL_SCRIPTS}'
${LogDirYml______}            - name: LOG_SHARE
${LogDirYml______}              value: '/var/log/log-share'
        - name: dbinit
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          image: ${IOM_DBINIT_IMAGE}
          volumeMounts:
${LogDirYml______}          - name: log-dev
${LogDirYml______}            mountPath: /var/log/log-share
${DbmigrateDirYml}          - name: dbmigrate-sps
${DbmigrateDirYml}            mountPath: /opt/stored_procedures
${DbmigrateDirYml}          - name: dbmigrate-scripts
${DbmigrateDirYml}            mountPath: /opt/migrations
          env:
            - name: TENANT
              value: Intershop
            - name: ENVIRONMENT
              value: '${ID}'
            - name: OMS_DB_HOST
              value: postgres-service
            - name: OMS_DB_PORT
              value: '${FORWARD_PORT_DB}'
            - name: OMS_DB_PASS
              value: '${DB_PASSWORD}'
            - name: OMS_LOGLEVEL_SCRIPTS
              value: '${OMS_LOGLEVEL_SCRIPTS}'
            - name: CAAS_ENV_NAME
              value: '${CAAS_ENV_NAME}'
${LogDirYml______}            - name: LOG_SHARE
${LogDirYml______}              value: '/var/log/log-share'
---
kind: Service
apiVersion: v1
metadata:
  name: iom-service
spec:
  selector:
    app: iom
  ports:
    - name: http
      port: ${FORWARD_PORT_IOM}
      targetPort: ${PORT_IOM}
      nodePort: ${PUBLIC_NODEPORT_IOM}
    - name: admin
      port: ${FORWARD_PORT_WILDFLY}
      targetPort: ${PORT_WILDFLY}
      nodePort: ${PUBLIC_NODEPORT_WILDFLY}
    - name: debug
      port: ${FORWARD_PORT_DEBUG}
      targetPort: ${PORT_DEBUG}
      nodePort: ${PUBLIC_NODEPORT_DEBUG}
  type: LoadBalancer
