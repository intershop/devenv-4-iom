### required configuration parameters

# ID is used to create unique names for docker instances
ID=${ID}

# postgres image (name:tag)
DOCKER_DB_IMAGE=${DOCKER_DB_IMAGE}

# postgres arguments
POSTGRES_ARGS=( ${PostgresArgsShell} )

# mailhog image (name:tag)
MAILHOG_IMAGE=${MAILHOG_IMAGE}

# Docker Image settings
# ---------------------

# image pull policy defines when to pull docker images
# if left empty, it defaults to "Always", which makes development easy, as always the newest
# version of requested docker image will be used. Can be set to any value allowed by
# ImagePullPolicy (see https://kubernetes.io/docs/concepts/configuration/overview/#container-images)
IMAGE_PULL_POLICY=${IMAGE_PULL_POLICY}

# iom dbaccount image (name:tag)
IOM_DBACCOUNT_IMAGE=${IOM_DBACCOUNT_IMAGE}

# iom config image (name:tag)
IOM_CONFIG_IMAGE=${IOM_CONFIG_IMAGE}

# iom app image (name:tag)
IOM_APP_IMAGE=${IOM_APP_IMAGE}

# CaaS projects may have environment specific configurations, test data, etc. CAAS_ENV_NAME assigns the environment type to an installation.
# TODO fix confluence link
# See: https://confluence.intershop.de/display/ISEXTBAKER/Snippet+-+Kubernetes+CaaS+hooks+-+public+variables
CAAS_ENV_NAME=${CAAS_ENV_NAME}

# Log Messages
# ------------
# log-level for different scopes of iom-application. Supported levels are:
#   FATAL, ERROR, WARN, INFO, DEBUG, TRACE, ALL
OMS_LOGLEVEL_CONSOLE=${OMS_LOGLEVEL_CONSOLE}
OMS_LOGLEVEL_IOM=${OMS_LOGLEVEL_IOM}
OMS_LOGLEVEL_HIBERNATE=${OMS_LOGLEVEL_HIBERNATE}
OMS_LOGLEVEL_QUARTZ=${OMS_LOGLEVEL_QUARTZ}
OMS_LOGLEVEL_CUSTOMIZATION=${OMS_LOGLEVEL_CUSTOMIZATION}

# log-level of helper scripts (dbmigrate, etc.). Supported levels are:
#   ERROR, WARN, INFO, DEBUG
OMS_LOGLEVEL_SCRIPTS=${OMS_LOGLEVEL_SCRIPTS}

# Keep database data
# ------------------------------
# If you want to keep database data even after a kubernetes restart, you have to set
# KEEP_DATABASE_DATA to true, otherwise false.
KEEP_DATABASE_DATA=${KEEP_DATABASE_DATA}

