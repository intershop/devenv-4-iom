kind: Deployment
apiVersion: apps/v1
metadata:
  name: iom
  labels:
    app: iom
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iom
  template:
    metadata:
      labels:
        app: iom
    spec:
      volumes:
${VolumeSpecAppDev}
${VolumeSpecTemplatesDev}
${VolumeSpecXsltDev}
${VolumeSpecShareDev}
${VolumeSpecLogDev}
      containers:
      - name: iom
        image: ${IOM_APP_IMAGE}
        #
        # For testing purposes, e.g. installing additional packages using yum,
        # it is necessary to run the container as user root. If you need this to do,
        # just uncomment the following statement.
        # 
        # securityContext:
        #   runAsUser: 0
        #
        imagePullPolicy: ${IMAGE_PULL_POLICY}
        readinessProbe:
          httpGet:
            path: /monitoring/services/health/status
            port: ${PORT_IOM}
          failureThreshold: 1
          periodSeconds: 10
          initialDelaySeconds: 150
          timeoutSeconds: 8
          successThreshold: 1
        volumeMounts:
${VolumeMountAppDev}
${VolumeMountTemplatesDev}
${VolumeMountXsltDev}
${VolumeMountShareDev}
${VolumeMountLogDevContainer}
        env:
          - name: TENANT
            value: Intershop
          - name: ENVIRONMENT
            value: '${ID}'
          - name: OMS_DB_HOSTLIST
            value: postgres-service:${FORWARD_PORT_DB}
          - name: OMS_DB_PASS
            value: '${DB_PASSWORD}'
          - name: OMS_DB_USER
            value: '${DB_USER}'
          - name: OMS_DB_NAME
            value: '${DB_NAME}'
          - name: OMS_SHAREDFS_HEALTHCHECK
            value: disabled
          - name: OMS_LOGLEVEL_CONSOLE
            value: '${OMS_LOGLEVEL_CONSOLE}'
          - name: OMS_LOGLEVEL_IOM
            value: '${OMS_LOGLEVEL_IOM}'
          - name: OMS_LOGLEVEL_HIBERNATE
            value: '${OMS_LOGLEVEL_HIBERNATE}'
          - name: OMS_LOGLEVEL_QUARTZ
            value: '${OMS_LOGLEVEL_QUARTZ}'
          - name: OMS_LOGLEVEL_CUSTOMIZATION
            value: '${OMS_LOGLEVEL_CUSTOMIZATION}'
          - name: OMS_LOGLEVEL_SCRIPTS
            value: '${OMS_LOGLEVEL_SCRIPTS}'
          - name: CAAS_ENV_NAME
            value: '${CAAS_ENV_NAME}'
          - name: JBOSS_OPTS
            value: "--debug *:8787"
          - name: JBOSS_JAVA_OPTS
            value: "-Xms1024M -Xmx2048M"
          - name: OMS_WILDFLY_READY_TIMEOUT
            value: '180'
          - name: OMS_PUBLIC_URL
            value: 'http://localhost:${FORWARD_PORT_IOM}'
          - name: OMS_EXEC_BACKEND_APPS
            value: 'true'
          - name: OMS_SHARE
            value: '${OmsShareDir}'
          - name: OMS_SMTP_HOST
            value: 'mailhog-service'
          - name: OMS_SMTP_PORT
            value: '${FORWARD_PORT_MAILHOG_SMTP}'
${EnvLogDevContainer}
        lifecycle:
          postStart:
            exec:
              command: ["/opt/oms/bin/iom_start_handler.sh"]
      initContainers:
        - name: dbaccount
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          image: ${IOM_DBACCOUNT_IMAGE}
          volumeMounts:
${VolumeMountLogDevInitContainer}
          env:
            - name: TENANT
              value: Intershop
            - name: ENVIRONMENT
              value: '${ID}'
            - name: PGHOST
              value: postgres-service
            - name: PGPORT
              value: '${FORWARD_PORT_DB}'
            - name: PGPASSWORD
              value: postgres
            - name: OMS_DB_PASS
              value: '${DB_PASSWORD}'
            - name: OMS_DB_OPTIONS
              value: "ENCODING='UTF8' LC_COLLATE='en_US.utf8' LC_CTYPE='en_US.utf8' CONNECTION LIMIT=-1"
            - name: OMS_LOGLEVEL_SCRIPTS
              value: '${OMS_LOGLEVEL_SCRIPTS}'
${EnvLogDevInitContainer}
        - name: dbinit
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          image: ${IOM_DBINIT_IMAGE}
          volumeMounts:
${VolumeMountLogDevInitContainer}
          env:
            - name: TENANT
              value: Intershop
            - name: ENVIRONMENT
              value: '${ID}'
            - name: OMS_DB_HOST
              value: postgres-service
            - name: OMS_DB_PORT
              value: '${FORWARD_PORT_DB}'
            - name: OMS_DB_PASS
              value: '${DB_PASSWORD}'
            - name: OMS_LOGLEVEL_SCRIPTS
              value: '${OMS_LOGLEVEL_SCRIPTS}'
            - name: CAAS_ENV_NAME
              value: '${CAAS_ENV_NAME}'
${EnvLogDevInitContainer}
---
kind: Service
apiVersion: v1
metadata:
  name: iom-service
spec:
  selector:
    app: iom
  ports:
    - name: http
      port: ${FORWARD_PORT_IOM}
      targetPort: ${PORT_IOM}
    - name: admin
      port: ${FORWARD_PORT_WILDFLY}
      targetPort: ${PORT_WILDFLY}
    - name: debug
      port: ${FORWARD_PORT_DEBUG}
      targetPort: ${PORT_DEBUG}
  type: LoadBalancer
---
kind: Ingress
apiVersion: extension/v1beta1
metadata:
  name: iom
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # https://github.com/kubernetes/ingress-nginx/issues/3989
    # it's necessary to have a matching host-rule in order to get session-affinity working
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-path: "/omt"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    # this rule should be used for UI testing to ensure session affinity
  - host: ${HOST_IOM}
    http:
      paths:
      - path: /
        backend:
          serviceName: iom-service
          servicePort: ${FORWARD_PORT_IOM}
  - http:
      paths:
      - path: /metrics
        backend:
          serviceName: iom-service
          servicePort: 9990
  # this rule ist used to check if iom pod is available
  - http:
      paths:
      - path: /
        backend:
          serviceName: iom-service
          servicePort: 8080
