<html>
  <head>
    <title>${ID} IOM development environment</title>

    <meta http-equiv="refresh" content="60" >

    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

    <!-- google code-prettify -->
    <script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js"></script>

    <!-- font awesome -->
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

    <!-- https://github.com/daylerees/colour-schemes -->
    <style>

      body > .container {
        margin-top: 50px;
      }

    </style>

  </head>
  <body>
    <!-- Fixed navbar -->
      <nav class="navbar navbar-default navbar-fixed-top">
        <div class="container">
          <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
              <span class="sr-only">Toggle navigation</span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">${ID}</a>
          </div>
          <div id="navbar" class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Configurations <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#configurations--cluster-properties">Database configuration in cluster.properties</a></li>
                  <li><a href="#configurations--database-connection-properties">Database connection properties</a></li>
                  <li><a href="#configurations--automatic-port-forwarding">Automatic port forwarding</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Setup <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#setup--initialize-reconfigure">Initialize/Reconfigure the IOM environment</a></li>
                  <li><a href="#setup--remove-environment">Remove the IOM environment</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Development process <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#development--reconfiguration">Reconfiguration</a></li>
                  <li><a href="#development--deployment">Deployment</a></li>
                  <li><a href="#development--debugging">Debugging</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Database <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#database--init">(Re)Initialization of the database</a></li>
                  <li><a href="#database--migrate">Migrate the database</a></li>
                  <li><a href="#database--create-dump">Create database dump</a></li>
                  <li><a href="#database--open-psql-terminal">Open psql terminal</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Docker <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#docker--useful">Useful docker commands</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Troubleshooting <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#troubleshooting--no-space-left">No space left</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Links <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="${OMT_URL}" target="_blank">OMT</a></li>
                  <li><a href="http://${HOST_IOM}:${FORWARD_PORT_WILDFLY}/console" target="_blank">WildFly console</a></li>
                </ul>
              </li>
            </ul>
          </div><!--/.nav-collapse -->
        </div>
      </nav>

      <div class="container">






        <h1>${ID} IOM development environment</h1>
        <h2 id="configurations">Configurations</h2>

        <h3 id="configurations--cluster-properties">Database configuration in cluster.properties</h3>
        <p>In order to use the postgres container '${ID}_db' for your IOM container '${ID}' please set following connection data in your cluster.properties.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
...
${CLUSTER_PROPERTIES_DB_HOST_CONFIG}
/system-property=is.oms.db.name: "${DB_NAME}"
/system-property=is.oms.db.user: "${DB_USER}"
/system-property=is.oms.db.pass: "${DB_PASSWORD}"
...

        </div></code></pre>

        <div class="alert alert-warning" role="alert">
          <strong>Note!</strong>
          <p>If you would like, you can change other properties (e. g. is.oms.mail.external.from, is.oms.mail.internal.from, ...) according to your needs, too.</p>
        </div>

        <h3 id="configurations--database-connection-properties">Database connection properties</h3>
        <p>Your postgres container '${ID}_db' is accessible from your host system (e.g. with pgAdmin) with following connection properties:</p>
        <table class="table table-striped table-condensed">
          <thead>
            <tr>
              <th>#</th>
              <th>Property</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <th scope="row">1</th>
              <td>Host</td>
              <td>${HOST_IOM}</td>
            </tr>
            <tr>
              <th scope="row">2</th>
              <td>Port</td>
              <td>${FORWARD_PORT_DB}</td>
            </tr>
            <tr>
              <th scope="row">3</th>
              <td>Name</td>
              <td>${DB_NAME}</td>
            </tr>
            <tr>
              <th scope="row">4</th>
              <td>User</td>
              <td>${DB_USER}</td>
            </tr>
            <tr>
              <th scope="row">5</th>
              <td>Password</td>
              <td>${DB_PASSWORD}</td>
            </tr>
          </tbody>
        </table>

        <h3 id="configurations--automatic-port-forwarding">Automatic port forwarding</h3>
        <p>Behind the scenes 'vagrant up' resp. 'vagrant reload' do the port forwarding automatically.</p>

        <table class="table table-striped table-condensed">
          <thead>
            <tr>
              <th>#</th>
              <th>Developer host</th>
              <th>Docker host</th>
              <th>IOM container</th>
              <th>Usage</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <th scope="row">1</th>
              <td>${FORWARD_PORT_IOM}</td>
              <td>${FORWARD_PORT_IOM}</td>
              <td>${PORT_IOM}</td>
              <td>OMT</td>
            </tr>
            <tr>
              <th scope="row">2</th>
              <td>${FORWARD_PORT_DEBUG}</td>
              <td>${FORWARD_PORT_DEBUG}</td>
              <td>${PORT_DEBUG}</td>
              <td>Debug Port</td>
            </tr>
            <tr>
              <th scope="row">3</th>
              <td>${FORWARD_PORT_WILDFLY}</td>
              <td>${FORWARD_PORT_WILDFLY}</td>
              <td>${PORT_WILDFLY}</td>
              <td>WildFly Console</td>
            </tr>
            <tr>
              <th scope="row">4</th>
              <td>${FORWARD_PORT_DB}</td>
              <td>${FORWARD_PORT_DB}</td>
              <td>${PORT_DB}</td>
              <td>PostgreSQL Database</td>
            </tr>
          </tbody>
        </table>

        <h2 id="setup">Setup</h2>
        <!--h3 id="setup--run-iom-environment">Run IOM envionment</h3>

        <p>The following creates a new IOM environment.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Creates a new IOM environment
# alias ${DOCKER_SETUP_RUN_IOM_ENV_ALIAS}="${DOCKER_SETUP_RUN_IOM_ENV}"

${DOCKER_SETUP_RUN_IOM_ENV_ALIAS}

        </div></code></pre-->

        <h3 id="setup--initialize-reconfigure">Initialize/Reconfigure the IOM environment</h3>

        <p>In order to use your configurations, the postgres database container have to be initialized and the IOM container have to be reconfigured. Please use following script. For further information, please see the following <a href="https://confluence.intershop.de/display/ISEXTBAKER/Concept+-+Usage+of+Docker+images" target="_blank">documentation</a>.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">

cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Creates a new IOM environment
# alias ${DOCKER_SETUP_RUN_IOM_ENV_ALIAS}="${DOCKER_SETUP_RUN_IOM_ENV}"

${DOCKER_SETUP_RUN_IOM_ENV_ALIAS}

# Initialize the postgres database container
# alias ${DOCKER_DATABASE_INIT_ALIAS}="${DOCKER_DATABASE_INIT}"

${DOCKER_DATABASE_INIT_ALIAS}

${DOCKER_SETUP_PROVIDE_VAR_DIRECTORY_DOKU_PASSAGE}

# Reconfigure the IOM container
# alias ${DOCKER_SETUP_RECONFIGURE_ALIAS}="${DOCKER_SETUP_RECONFIGURE}"

${DOCKER_SETUP_RECONFIGURE_ALIAS}

        </div></code></pre>

        <h3 id="setup--remove-environment">Remove the IOM environment</h3>

        <p>In order to remove all IOM containers you can use following script.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Remove the entire IOM environment and the data volume used by the postgres container
# alias ${DOCKER_SETUP_REMOVE_ENV_ALIAS}="${DOCKER_SETUP_REMOVE_ENV}"

${DOCKER_SETUP_REMOVE_ENV_ALIAS} --volumes

        </div></code></pre>

        <div class="alert alert-warning" role="alert">
          <strong>Note!</strong>
          <p>If you would like to keep the state of the database you must not remove the data volume. You just have to remove the --volumes parameter to keep the data volume. If you restart the environment the postgres database container (${ID}_db) it will automatically reuse the data volume and all data is available again.</p>
        </div>


        <h2 id="development">Development process</h2>

        <h3 id="development--reconfiguration">Reconfiguration</h3>

        <p>Configuration changes (e. g. cluster.properties) can be made with following docker command.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Reconfigure the IOM container
# alias ${DOCKER_SETUP_RECONFIGURE_ALIAS}="${DOCKER_SETUP_RECONFIGURE}"

${DOCKER_SETUP_RECONFIGURE_ALIAS}

        </div></code></pre>

        <h3 id="development--deployment">Deployment</h3>

        <p>A deployment resp. un- or redeployment of IOM artifacts can be done with following docker commands.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Undeploy all artifacts
# alias ${DOCKER_DEVELOPMENT_UNDEPLOY_ALIAS}="${DOCKER_DEVELOPMENT_UNDEPLOY}"

${DOCKER_DEVELOPMENT_UNDEPLOY_ALIAS}

# Undeploy bakery.omt only
${DOCKER_DEVELOPMENT_UNDEPLOY_ALIAS} --pattern=omt

# Deploy all artifacts
# alias ${DOCKER_DEVELOPMENT_DEPLOY_ALIAS}="${DOCKER_DEVELOPMENT_DEPLOY}"

${DOCKER_DEVELOPMENT_DEPLOY_ALIAS}

# Redeploy all artifacts
# alias ${DOCKER_DEVELOPMENT_REDEPLOY_ALIAS}="${DOCKER_DEVELOPMENT_REDEPLOY}"

${DOCKER_DEVELOPMENT_REDEPLOY_ALIAS}

# Redeploy bakery.omt only
${DOCKER_DEVELOPMENT_REDEPLOY_ALIAS} --pattern=omt

        </div></code></pre>

        <h3 id="development--debugging">Debugging</h3>

        <p>Port ${FORWARD_PORT_DEBUG} for Remote Java Debugging is available out of the box. For details see section <a href="#configurations--automatic-port-forwarding">Automatic port forwarding</a>.</p>

        <div class="alert alert-warning" role="alert">
          <strong>Note!</strong>
          <p>Please note that the listening debug port will not get restored when restarting the WildFly application server on service level via</p><br>

          <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
systemctl restart jboss-as-standalone.service

          </div></code></pre>
        </div>

        <h2 id="database">Database</h2>
        <h3 id="database--init">(Re)Initialization of the database</h3>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Initialize the postgres database container
# alias ${DOCKER_DATABASE_INIT_ALIAS}="${DOCKER_DATABASE_INIT}"

${DOCKER_DATABASE_INIT_ALIAS}

        </div></code></pre>

        <h3 id="database--migrate">Migrate the database</h3>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Migrate the database in the postgres database container
# alias ${DOCKER_DATABASE_MIGRATE_ALIAS}="${DOCKER_DATABASE_MIGRATE}"

${DOCKER_DATABASE_MIGRATE_ALIAS}

        </div></code></pre>

        <h3 id="database--create-dump">Create database dump</h3>

        <p>Sometimes it is very useful to create a database dump (e.g. for setting up a second environment or for giving it to other developers). Following command creates a timestamped dump in your local postgres/dumps directory.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Create a timestamped datbase dump in your local postgres/dumps directory
# alias ${DOCKER_DATABASE_CREATE_DUMP_ALIAS}="${DOCKER_DATABASE_CREATE_DUMP}"

${DOCKER_DATABASE_CREATE_DUMP_ALIAS}

        </div></code></pre>

        <h3 id="database--open-psql-terminal">Open psql terminal</h3>

        <p>Following command opens a psql terminal.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Connect to the IOM db container via psql
# alias ${DOCKER_DATABASE_OPEN_PSQL_TERMINAL_ALIAS}="${DOCKER_DATABASE_OPEN_PSQL_TERMINAL}"

${DOCKER_DATABASE_OPEN_PSQL_TERMINAL_ALIAS}

# Enter the password for user ${DB_USER}: ${DB_PASSWORD}

        </div></code></pre>


        <!-- no docker images for this version -->
        <!-- div class="alert alert-warning" role="alert">
          <strong>Note!</strong>
          <p>Up to (and including) version 1.1 the following command shoud be used!</p><br>

          <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Create a timestamped datbase dump in your local postgres/dumps directory
# alias ${DOCKER_DATABASE_CREATE_DUMP_V_1_1_ALIAS}="${DOCKER_DATABASE_CREATE_DUMP_V_1_1}"

${DOCKER_DATABASE_CREATE_DUMP_V_1_1_ALIAS}

          </div></code></pre>
        </div-->


        <h2 id="docker">Docker</h2>
        <h3 id="docker--useful">Useful docker commands</h3>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Login into the IOM container
docker exec -it ${ID} bash

# Login into the postrgres database container
docker exec -it ${ID}_db bash

# Inspect the postgres database data volume
docker volume inspect ${COMPOSE_PROJECT_NAME}_db_data

        </div></code></pre>

        <h2 id="troubleshooting ">Troubleshooting</h2>
        <h3 id="troubleshooting--no-space-left">No space left</h3>

        <p>If you are using docker for quite a long time, you collect many docker images over the time. So possibly a "no space left" error may occur. In order to clean up your docker images, you can run the followoing command to remove unused images.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Remove unused docker images
docker rmi $(docker images -q)

        </div></code></pre>



      </div> <!-- /container -->


      <!-- Bootstrap core JavaScript
      ================================================== -->
      <!-- Placed at the end of the document so the pages load faster -->
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
      <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>

      <!-- Latest compiled and minified JavaScript -->
      <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

    </body>
</html>
