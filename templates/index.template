<html>
  <head>
    <title>${ID} IOM development environment</title>

    <!--meta http-equiv="refresh" content="60"-->

    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

    <!-- google code-prettify -->
    <script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js"></script>

    <!-- font awesome -->
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

    <!-- https://github.com/daylerees/colour-schemes -->
    <style>

      body > .container {
        margin-top: 50px;
      }

      .alias-toggle {
        padding: 2px 3px;
      }

    </style>

  </head>
  <body>
    <!-- Fixed navbar -->
      <nav class="navbar navbar-default navbar-fixed-top">
        <div class="container">
          <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
              <span class="sr-only">Toggle navigation</span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">${ID}</a>
          </div>
          <div id="navbar" class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Configurations <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#configurations--database-connection-properties">Database connection properties</a></li>
                  <li><a href="#configurations--automatic-port-forwarding">Automatic port forwarding</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Setup <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#setup--setup">Setup the IOM environment</a></li>
                  <li><a href="#setup--remove-environment">Remove the IOM environment</a></li>
                  <li><a href="#setup--remove-database">Remove the postgres database container</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Development process <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#development--reconfiguration">Reconfiguration</a></li>
                  <li><a href="#development--deployment">Deployment</a></li>
                  <li><a href="#development--debugging">Debugging</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Database <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#database--init">Initialize the database</a></li>
                  <li><a href="#database--migrate">Migrate the database</a></li>
                  <li><a href="#database--create-dump">Create a database dump</a></li>
                  <li><a href="#database--open-psql-terminal">Open psql terminal</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Docker <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#docker--useful">Useful docker / docker compose commands</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Troubleshooting <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="#troubleshooting--no-space-left">No space left</a></li>
                </ul>
              </li>
              <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Links <span class="caret"></span></a>
                <ul class="dropdown-menu">
                  <li><a href="${OMT_URL}" target="_blank">OMT</a></li>
                  <li><a href="http://${HOST_IOM}:${FORWARD_PORT_IOM}/dbdoc/" target="_blank">DB Documentation</a></li>
                  <li><a href="http://${HOST_IOM}:${FORWARD_PORT_IOM}/omt-help/" target="_blank">Online Help</a></li>
                  <li><a href="http://${HOST_IOM}:${FORWARD_PORT_WILDFLY}/console" target="_blank">WildFly console</a></li>
                </ul>
              </li>
            </ul>
          </div><!--/.nav-collapse -->
        </div>
      </nav>

      <div class="container">






        <h1>${ID} IOM development environment</h1>
        <h2 id="configurations">Configurations</h2>

        <h3 id="configurations--database-connection-properties">Database connection properties</h3>
        <p>Your postgres container is accessible from your host system (e.g. with pgAdmin) with following connection properties:</p>
        <table class="table table-striped table-condensed">
          <thead>
            <tr>
              <th>#</th>
              <th>Property</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <th scope="row">1</th>
              <td>Host</td>
              <td>${HOST_IOM}</td>
            </tr>
            <tr>
              <th scope="row">2</th>
              <td>Port</td>
              <td>${FORWARD_PORT_DB}</td>
            </tr>
            <tr>
              <th scope="row">3</th>
              <td>Name</td>
              <td>${DB_NAME}</td>
            </tr>
            <tr>
              <th scope="row">4</th>
              <td>User</td>
              <td>${DB_USER}</td>
            </tr>
            <tr>
              <th scope="row">5</th>
              <td>Password</td>
              <td>${DB_PASSWORD}</td>
            </tr>
          </tbody>
        </table>

        <h3 id="configurations--automatic-port-forwarding">Automatic port forwarding</h3>
        <p>Behind the scenes port forwarding is handled automatically.</p>

        <table class="table table-striped table-condensed">
          <thead>
            <tr>
              <th>#</th>
              <th>Developer host</th>
              <th>Kubernetes Service</th>
              <th>IOM container</th>
              <th>Usage</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <th scope="row">1</th>
              <td>${FORWARD_PORT_IOM}</td>
              <td>${FORWARD_PORT_IOM}</td>
              <td>${PORT_IOM}</td>
              <td>OMT</td>
            </tr>
            <tr>
              <th scope="row">2</th>
              <td>${FORWARD_PORT_DEBUG}</td>
              <td>${FORWARD_PORT_DEBUG}</td>
              <td>${PORT_DEBUG}</td>
              <td>Debug Port</td>
            </tr>
            <tr>
              <th scope="row">3</th>
              <td>${FORWARD_PORT_WILDFLY}</td>
              <td>${FORWARD_PORT_WILDFLY}</td>
              <td>${PORT_WILDFLY}</td>
              <td>WildFly Console</td>
            </tr>
            <tr>
              <th scope="row">4</th>
              <td>${FORWARD_PORT_DB}</td>
              <td>${FORWARD_PORT_DB}</td>
              <td>${PORT_DB}</td>
              <td>PostgreSQL Database</td>
            </tr>
          </tbody>
        </table>

        <h2 id="setup">Setup</h2>

        <h3 id="setup--setup">Setup the IOM environment</h3>

        <p>In order to setup your IOM environment please use following script.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}

# Setup postgres
scripts/template_engine.sh templates/postgres.yml.template ${CONFIG_FILE} | kubectl apply -f -

# Setup IOM
scripts/template_engine.sh templates/iom.yml.template ${CONFIG_FILE} | kubectl apply -f -
        </div></code></pre>

        <h3 id="setup--remove-environment">Remove the IOM environment</h3>

        <p>In order to remove all IOM containers you can use following script.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}<span class="btn btn-primary btn-xs alias-toggle" style="float:right" aria-expanded="false" data-target=".setup--remove-environment-aliases" data-toggle="collapse" title="Show aliases"><i class="fa fa-plus"></i></span>
${VAGRANT_SSH}

# Remove the entire IOM environment and the data volume used by the postgres container<span class="collapse setup--remove-environment-aliases"># alias ${DOCKER_COMPOSE_BASE_COMMAND_ALIAS}="${DOCKER_COMPOSE_BASE_COMMAND}"</span>
${DOCKER_COMPOSE_BASE_COMMAND_ALIAS} down --volumes
        </div></code></pre>

        <div class="alert alert-warning" role="alert">
          <strong>Note!</strong>
          <p>If you would like to keep the state of the database you must not remove the data volume. You just have to remove the --volumes parameter to keep the data volume. If you restart the environment the postgres database container (${ID}_db) it will automatically reuse the data volume and all data is available again.</p>
        </div>

        <h3 id="setup--remove-database">Remove the postgres database container</h3>

        <p>In order to only remove the postgres database containers you can use following script.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}<span class="btn btn-primary btn-xs alias-toggle" style="float:right" aria-expanded="false" data-target=".setup--remove-database-aliases" data-toggle="collapse" title="Show aliases"><i class="fa fa-plus"></i></span>
${VAGRANT_SSH}

# Stop and remove the postgres database container<span class="collapse setup--remove-database-aliases"># alias ${DOCKER_COMPOSE_BASE_COMMAND_ALIAS}="${DOCKER_COMPOSE_BASE_COMMAND}"</span>
${DOCKER_COMPOSE_BASE_COMMAND_ALIAS} rm -fs ${DOCKER_COMPOSE_DB_SERVICE_NAME}

# Remove the data volume used by the postgres container
docker volume rm ${COMPOSE_PROJECT_NAME}_db_data
        </div></code></pre>


        <h2 id="development">Development process</h2>

        <h3 id="development--reconfiguration">Reconfiguration</h3>

        <p>Configuration changes (e. g. cluster.properties) can be made with following docker command.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}<span class="btn btn-primary btn-xs alias-toggle" style="float:right" aria-expanded="false" data-target=".development--reconfiguration-aliases" data-toggle="collapse" title="Show aliases"><i class="fa fa-plus"></i></span>
${VAGRANT_SSH}

# Reconfigure the IOM container<span class="collapse development--reconfiguration-aliases"># alias ${DOCKER_SETUP_RECONFIGURE_ALIAS}="${DOCKER_SETUP_RECONFIGURE}"</span>
${DOCKER_SETUP_RECONFIGURE_ALIAS}
        </div></code></pre>

        <h3 id="development--deployment">Deployment</h3>

        <p>A deployment resp. un- or redeployment of IOM artifacts can be done with following docker commands.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}<span class="btn btn-primary btn-xs alias-toggle" style="float:right" aria-expanded="false" data-target=".development--deployment-aliases" data-toggle="collapse" title="Show aliases"><i class="fa fa-plus"></i></span>
${VAGRANT_SSH}

# Undeploy all artifacts<span class="collapse development--deployment-aliases"># alias ${DOCKER_DEVELOPMENT_UNDEPLOY_ALIAS}="${DOCKER_DEVELOPMENT_UNDEPLOY}"</span>
${DOCKER_DEVELOPMENT_UNDEPLOY_ALIAS}

# Undeploy bakery.omt only
${DOCKER_DEVELOPMENT_UNDEPLOY_ALIAS} --pattern=omt

# Deploy all artifacts<span class="collapse development--deployment-aliases"># alias ${DOCKER_DEVELOPMENT_DEPLOY_ALIAS}="${DOCKER_DEVELOPMENT_DEPLOY}"</span>
${DOCKER_DEVELOPMENT_DEPLOY_ALIAS}

# Redeploy all artifacts<span class="collapse development--deployment-aliases"># alias ${DOCKER_DEVELOPMENT_REDEPLOY_ALIAS}="${DOCKER_DEVELOPMENT_REDEPLOY}"</span>
${DOCKER_DEVELOPMENT_REDEPLOY_ALIAS}

# Redeploy bakery.omt only
${DOCKER_DEVELOPMENT_REDEPLOY_ALIAS} --pattern=omt
        </div></code></pre>

        <h3 id="development--debugging">Debugging</h3>

        <p>Port ${FORWARD_PORT_DEBUG} for Remote Java Debugging is available out of the box. For details see section <a href="#configurations--automatic-port-forwarding">Automatic port forwarding</a>.</p>

        <div class="alert alert-warning" role="alert">
          <strong>Note!</strong>
          <p>Please note that the listening debug port will not get restored when restarting the WildFly application server on service level via</p><br>

          <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
systemctl restart jboss-as-standalone.service
          </div></code></pre>
        </div>

        <h2 id="database">Database</h2>
        <h3 id="database--init">Initialize the database</h3>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}<span class="btn btn-primary btn-xs alias-toggle" style="float:right" aria-expanded="false" data-target=".database--init-aliases" data-toggle="collapse" title="Show aliases"><i class="fa fa-plus"></i></span>
${VAGRANT_SSH}

# Initialize the postgres database container<span class="collapse database--init-aliases"># alias ${DOCKER_DATABASE_INIT_ALIAS}="${DOCKER_DATABASE_INIT}"</span>
${DOCKER_DATABASE_INIT_ALIAS}
        </div></code></pre>

        <h3 id="database--migrate">Migrate the database</h3>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}<span class="btn btn-primary btn-xs alias-toggle" style="float:right" aria-expanded="false" data-target=".database--migrate-aliases" data-toggle="collapse" title="Show aliases"><i class="fa fa-plus"></i></span>
${VAGRANT_SSH}

# Migrate the postgres database container<span class="collapse database--migrate-aliases"># alias ${DOCKER_DATABASE_MIGRATE_ALIAS}="${DOCKER_DATABASE_MIGRATE}"</span>
${DOCKER_DATABASE_MIGRATE_ALIAS}
        </div></code></pre>

        <h3 id="database--create-dump">Create a database dump</h3>

        <p>Sometimes it is very useful to create a database dump (e.g. for setting up a second environment or for giving it to other developers). Following command creates a timestamped dump in your local postgres/dumps directory.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}<span class="btn btn-primary btn-xs alias-toggle" style="float:right" aria-expanded="false" data-target=".database--create-dump-aliases" data-toggle="collapse" title="Show aliases"><i class="fa fa-plus"></i></span>
${VAGRANT_SSH}

# Create a timestamped datbase dump in your local postgres/dumps directory<span class="collapse database--create-dump-aliases"># alias ${DOCKER_DATABASE_CREATE_DUMP_ALIAS}="${DOCKER_DATABASE_CREATE_DUMP}"</span>
${DOCKER_DATABASE_CREATE_DUMP_ALIAS}
        </div></code></pre>

        <h3 id="database--open-psql-terminal">Open psql terminal</h3>

        <p>Following command opens a psql terminal.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}<span class="btn btn-primary btn-xs alias-toggle" style="float:right" aria-expanded="false" data-target=".database--open-psql-terminal-aliases" data-toggle="collapse" title="Show aliases"><i class="fa fa-plus"></i></span>
${VAGRANT_SSH}

# Connect to the IOM db container via psql<span class="collapse database--open-psql-terminal-aliases"># alias ${DOCKER_DATABASE_OPEN_PSQL_TERMINAL_ALIAS}="${DOCKER_DATABASE_OPEN_PSQL_TERMINAL}"</span>
${DOCKER_DATABASE_OPEN_PSQL_TERMINAL_ALIAS}

# Enter the password for user ${DB_USER}: ${DB_PASSWORD}
        </div></code></pre>


        <h2 id="docker">Docker / Docker Compose</h2>
        <h3 id="docker--useful">Useful docker commands</h3>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}<span class="btn btn-primary btn-xs alias-toggle" style="float:right" aria-expanded="false" data-target=".docker--useful-aliases" data-toggle="collapse" title="Show aliases"><i class="fa fa-plus"></i></span>
${VAGRANT_SSH}

# Login into the IOM container
docker exec -it ${ID} bash

# Login into the Postgres database container
docker exec -it ${ID}_db bash

# Inspect the postgres database data volume
docker volume inspect ${COMPOSE_PROJECT_NAME}_db_data

# Get help on docker compose commands<span class="collapse docker--useful-aliases"># alias ${DOCKER_COMPOSE_BASE_COMMAND_ALIAS}="${DOCKER_COMPOSE_BASE_COMMAND}"</span>
${DOCKER_COMPOSE_BASE_COMMAND_ALIAS} help

# List containers<span class="collapse docker--useful-aliases"># alias ${DOCKER_COMPOSE_BASE_COMMAND_ALIAS}="${DOCKER_COMPOSE_BASE_COMMAND}"</span>
${DOCKER_COMPOSE_BASE_COMMAND_ALIAS} ps

# View the docker compose config<span class="collapse docker--useful-aliases"># alias ${DOCKER_COMPOSE_BASE_COMMAND_ALIAS}="${DOCKER_COMPOSE_BASE_COMMAND}"</span>
${DOCKER_COMPOSE_BASE_COMMAND_ALIAS} config
        </div></code></pre>

        <h2 id="troubleshooting ">Troubleshooting</h2>
        <h3 id="troubleshooting--no-space-left">No space left</h3>

        <p>If you are using docker for quite a long time, you collect many docker objects (e.g. images) over the time. So possibly a "no space left" error may occur. In order to clean up unused docker objects, you can use the <a href="https://docs.docker.com/config/pruning" title="Prune unused Docker objects" target="_blank">docker prune command</a>.</p>

        <pre class="prettyprint lang-bash"><code><div class="col-xs-12">
cd ${PROJECT_PATH}
${VAGRANT_SSH}

# Prune everything
docker system prune
        </div></code></pre>



      </div> <!-- /container -->


      <!-- Bootstrap core JavaScript
      ================================================== -->
      <!-- Placed at the end of the document so the pages load faster -->
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
      <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>

      <script>

          // toogle icon and title
          function toggleAliasButton(e) {

              var icon = $(e.target);
              var button = icon.parent();

              // if the button was clicked instead of the icon
              if($(e.target).children('i').length) {
                  button = $(e.target);
                  icon = button.find('i');
              }

              icon.toggleClass('fa-plus');
              icon.toggleClass('fa-minus');

              var title = 'Show aliases';

              if( icon.hasClass('fa-minus')){
                 title = 'Hide aliases';
              }

              button.attr('title', title);
          }
          $('.alias-toggle').on('click', toggleAliasButton);

      </script>

      <!-- Latest compiled and minified JavaScript -->
      <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

    </body>
</html>
